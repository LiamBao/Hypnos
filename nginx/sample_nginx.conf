# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        listen       [::]:80;
        listen       443 default ssl;
        ssl_certificate      project.crt;
        ssl_certificate_key  project.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        # Upgrade package may upto several gigabytes
        client_max_body_size 2G;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        set $need_redirect 1;
        if ($host = "192.168.234.1") {
            set $need_redirect 0;
        }

        if ($host = "127.0.0.1") {
            set $need_redirect 0;
        }

        if ($scheme = "https") {
            set $need_redirect 0;
        }

        if ($need_redirect = 1) {
            return 301 https://$host$request_uri;
        }

        location /static {
            alias /opt/django/orchestration/static;
        }

        location /media {
            alias /opt/django/orchestration/media;
        }

        location /socket.io {
            proxy_pass http://127.0.0.1:8081/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location / {
            uwsgi_pass 127.0.0.1:8080;
            uwsgi_read_timeout 1800;
            uwsgi_send_timeout 300;
            include uwsgi_params;
        }


        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}
